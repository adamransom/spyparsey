name: spyparsey
version: "1.0"
author: Adam Ransom
about: Parses and queries a collection of SpyParty replays
args:
    - players:
        long: players
        help: Filters based on players' names (either spy or sniper)
        long_help:
            Filters based on players' names (either spy or sniper). This uses OR matching, so if you
            use multiple player names it finds games with ANY of the players, not ALL of the players.
            If you want find the games where two players have played together, use the --pair option.
        aliases: player
        conflicts_with: pair
        multiple: true
        takes_value: true
        value_name: NAMES
    - pair:
        long: pair
        help: Filters based on a pair of players who have played together
        conflicts_with: player
        multiple: true
        number_of_values: 2
        takes_value: true
        value_name: NAMES
    - maps:
        long: maps
        help: Filters based maps
        aliases: map
        multiple: true
        takes_value: true
        value_name: MAPS
    - spies:
        long: spies
        help: Filters based on spies' names
        aliases: spy
        multiple: true
        takes_value: true
        value_name: NAMES
    - snipers:
        long: snipers
        help: Filters based on snipers' names
        aliases: sniper
        multiple: true
        takes_value: true
        value_name: NAMES
    - results:
        long: results
        help: Filters based on the result of the game
        aliases: result
        multiple: true
        possible_values: ["missionswin", "spyshot", "civilianshot", "timeout", "unfinished"]
        takes_value: true
        value_name: RESULTS
    - spywin:
        long: spywin
        help: Filters games that end in a spy win
    - sniperwin:
        long: sniperwin
        help: Filters games that end in a sniper win
    - paths:
        long: paths
        help: Sets the list of paths to look for replays (can be directories or single replays)
        aliases: path
        multiple: true
        required: true
        value_name: PATHS
